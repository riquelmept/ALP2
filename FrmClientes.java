
package Formularios;

import Classes.Cliente;
import DAO.ClienteDAO;
import classesBase.MyTableModel;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;





public class FrmClientes extends javax.swing.JFrame {
    private List<Cliente> clientes;
    private int controleDeAtualizacao;
   
    
    
    public FrmClientes() {
        initComponents();
        inciaCodigo();
        lerDadosIniciais();
        this.controleDeAtualizacao = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JTextField();
        btnInserir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaClientes = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPesquisa = new javax.swing.JTextPane();
        btnAtualiza = new javax.swing.JButton();
        btnApaga = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("CÃ³digo");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Nome");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Telefone");

        txtCodigo.setEditable(false);

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        txtTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefoneActionPerformed(evt);
            }
        });

        btnInserir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularios/364032-imagens/imagens/success.png"))); // NOI18N
        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        tabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaClientes);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Pesquisa");

        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtPesquisa);

        btnAtualiza.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAtualiza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularios/364032-imagens/imagens/eraser.png"))); // NOI18N
        btnAtualiza.setText("Atualiza");
        btnAtualiza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizaActionPerformed(evt);
            }
        });

        btnApaga.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnApaga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularios/364032-imagens/imagens/editar.png"))); // NOI18N
        btnApaga.setText("Apaga");
        btnApaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagaActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularios/364032-imagens/imagens/sair.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnInserir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAtualiza)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnApaga)
                                .addGap(18, 18, 18)
                                .addComponent(btnSair))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInserir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAtualiza)
                        .addComponent(btnApaga)
                        .addComponent(btnSair)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefoneActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        if(this.txtNome.getText().trim().equals("")|| this.txtTelefone.getText().trim()
                .equals("")){
            JOptionPane.showMessageDialog(rootPane, "Erro - todos os campos devem ser preenchidos");}
        else{
            Cliente cliente = new Cliente();
            cliente.setNome(this.txtNome.getText().trim());
            cliente.setTelefone(this.txtTelefone.getText().trim());
            
            ClienteDAO dao = new ClienteDAO("svc","root");
            try {
                dao.insere(cliente);
                JOptionPane.showMessageDialog(null, "Cliente inserido com sucesso!");
                this.txtNome.setText("");
                this.txtTelefone.setText("");
                this.txtCodigo.setText(dao.GetNextId("cliente", "codcliente")+"");
                lerDadosIniciais();
            } catch (SQLException ex) {
                Logger.getLogger(FrmClientes.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }//GEN-LAST:event_btnInserirActionPerformed

    private void txtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyReleased
        listarDadosPesquisados();
    }//GEN-LAST:event_txtPesquisaKeyReleased

    private void btnAtualizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizaActionPerformed
        if(this.controleDeAtualizacao == 0){
            if(this.tabelaClientes.getSelectedRow() == -1){
                JOptionPane.showMessageDialog(null, "VocÃª deve selecionar o cliente");
            }else{
                Cliente cliente = clientes.get(this.tabelaClientes.getSelectedRow());
                this.txtCodigo.setText(cliente.getCodcliente()+"");
                this.txtNome.setText(cliente.getNome());
                this.txtTelefone.setText(cliente.getTelefone()+"");
                this.btnAtualiza.setText("Confirmar");
                this.controleDeAtualizacao = 1;
                this.btnInserir.setEnabled(false);
                this.btnApaga.setEnabled(false);
            }}else{
            ClienteDAO dao = new ClienteDAO ("svc","root");
            Cliente cliente = new Cliente ();
            cliente.setCodcliente(Integer.parseInt(this.txtCodigo.getText().trim()));
            cliente.setNome(this.txtNome.getText().trim());
            cliente.setTelefone(this.txtTelefone.getText().trim());
            try {
                dao.muda(cliente);
                this.controleDeAtualizacao = 0;
                this.btnAtualiza.setText("Atualizar");
                this.btnInserir.setEnabled(true);
                this.btnApaga.setEnabled(true);
                limparCampos();
                listarDadosPesquisados();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
            }
        }  
    }//GEN-LAST:event_btnAtualizaActionPerformed

    private void btnApagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagaActionPerformed
      if(this.tabelaClientes.getSelectedRow() == -1){
           JOptionPane.showMessageDialog(null,"VocÃª deve selecionar o cliente"); 
        }else{
            Cliente cliente = clientes.get(this.tabelaClientes.getSelectedRow());
            int r = JOptionPane.showConfirmDialog(null, "VocÃª deseja realmente apagar o cliente "+cliente.getNome());
            System.out.println(r);
            if(r == 0){
                ClienteDAO dao = new ClienteDAO("svc","root");
                try {
                    dao.deleta(cliente.getCodcliente());
                    JOptionPane.showMessageDialog(null, "Produto deletado com sucesso");
                    listarDadosPesquisados();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnApagaActionPerformed
     
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApaga;
    private javax.swing.JButton btnAtualiza;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTable tabelaClientes;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextPane txtPesquisa;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    private void lerDadosIniciais() {
       ClienteDAO dao = new ClienteDAO("svc","root");
        try {
            clientes = dao.listarTodosClientes();
            MyTableModel tab = new MyTableModel(Cliente.class,clientes,tabelaClientes);
            tabelaClientes.setModel(tab);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
        }
    }

    private void inciaCodigo() {
     ClienteDAO dao = new ClienteDAO("svc","root");
        try {
            this.txtCodigo.setText( dao.GetNextId("cliente", "codcliente")+"");
        } catch (SQLException ex) {
            Logger.getLogger(FrmClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
     private void listarDadosPesquisados(){
        ClienteDAO dao = new ClienteDAO("svc","root");
        String nome = this.txtPesquisa.getText().trim();       
        try {
            clientes = dao.listarTodosClientesPorNome(nome);
            MyTableModel tab = new MyTableModel(Cliente.class,clientes,tabelaClientes);
            tabelaClientes.setModel(tab);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
        }
    }
     
       private void limparCampos() {
        ClienteDAO dao = new ClienteDAO("svc","root");
        this.txtNome.setText("");
        this.txtTelefone.setText("");
    try {
        this.txtCodigo.setText(dao.GetNextId("cliente", "codcliente")+"");
    } catch (SQLException ex) {
      JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
            }
    }

    
}
