/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Classes.Computador;


import DAO.ComputadorDAO;

import classesBase.MyTableModel;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author johnm
 */
public class FrmComputador extends javax.swing.JFrame {
    
   private List<Computador> computadores;
    private int controleDeAtualizacao;

 
    public FrmComputador() {
        initComponents();
        lerDadosIniciais();
        this.controleDeAtualizacao = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnInserirComputador = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaComputador = new javax.swing.JTable();
        txtCodigo = new javax.swing.JTextField();
        txtProcessador = new javax.swing.JTextField();
        txtMemoria = new javax.swing.JTextField();
        txtPlacaDeVideo = new javax.swing.JTextField();
        txtFonte = new javax.swing.JTextField();
        txtDiscoRigido = new javax.swing.JTextField();
        txtPesquisar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Processador");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Memória");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Placa de Vídeo");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Fonte");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Disco Rigido ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Pesquisar");

        btnInserirComputador.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnInserirComputador.setText("Inserir");
        btnInserirComputador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirComputadorActionPerformed(evt);
            }
        });

        btnAtualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnApagar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnApagar.setText("Apagar");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        tabelaComputador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaComputador);

        txtCodigo.setEditable(false);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        txtProcessador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProcessadorActionPerformed(evt);
            }
        });

        txtFonte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFonteActionPerformed(evt);
            }
        });

        txtPesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesquisarFocusLost(evt);
            }
        });
        txtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarActionPerformed(evt);
            }
        });
        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Preço");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtProcessador, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPlacaDeVideo, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFonte, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiscoRigido, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                        .addGap(118, 118, 118))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnInserirComputador)
                                        .addGap(33, 33, 33)
                                        .addComponent(btnAtualizar)
                                        .addGap(80, 80, 80)
                                        .addComponent(btnApagar)
                                        .addGap(36, 36, 36)
                                        .addComponent(btnSair))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addGap(14, 14, 14)
                                        .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProcessador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPlacaDeVideo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtFonte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDiscoRigido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserirComputador)
                    .addComponent(btnAtualizar)
                    .addComponent(btnApagar)
                    .addComponent(btnSair))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFonteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFonteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFonteActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtProcessadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProcessadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProcessadorActionPerformed

    private void btnInserirComputadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirComputadorActionPerformed
         if(this.txtProcessador.getText().trim().equals("")||
               this.txtMemoria.getText().trim().equals(" ")||
               this.txtPlacaDeVideo.getText().trim().equals(" ")||
               this.txtFonte.getText().trim().equals(" ")||
               this.txtDiscoRigido.getText().trim().equals(" ")||
               this.txtPreco.getText().trim().equals(" ")) 
               {
            JOptionPane.showMessageDialog(rootPane, "Erro - todos os campos devem ser preenchidos");}
       else{
             Computador computador = new Computador();
             computador.setProcessador(this.txtProcessador.getText().trim());
             computador.setMemoria(this.txtMemoria.getText().trim());
             computador.setPlacaVideo(this.txtPlacaDeVideo.getText().trim());
             computador.setFonte(this.txtFonte.getText().trim());
             computador.setDiscoRigido(this.txtDiscoRigido.getText().trim());
             computador.setPreco(Double.parseDouble(this.txtPreco.getText().trim()));
             
             ComputadorDAO dao = new ComputadorDAO("svc","root");
           try {
               dao.insere(computador);
               JOptionPane.showMessageDialog(null, "Computador inserida com sucesso");
               this.txtProcessador.setText("");
               this.txtMemoria.setText("");
               this.txtPlacaDeVideo.setText("");
               this.txtFonte.setText("");
               this.txtDiscoRigido.setText("");
               this.txtPreco.setText("");
               this.txtCodigo.setText(dao.GetNextId("computador", "cod")+"");
               lerDadosIniciais();
           } catch (SQLException ex) {
               Logger.getLogger(FrmComputador.class.getName()).log(Level.SEVERE, null, ex);
           }
             
        
       };
    }//GEN-LAST:event_btnInserirComputadorActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
          if(this.controleDeAtualizacao == 0){
        if (this.tabelaComputador.getSelectedRow() == -1){
           JOptionPane.showMessageDialog(null,"Você deve selecionar a computador");
       }else{
            Computador computador = computadores.get(this.tabelaComputador.getSelectedRow());
            this.txtCodigo.setText(computador.getCod()+"");
            this.txtProcessador.setText(computador.getProcessador());
            this.txtMemoria.setText(computador.getMemoria());
            this.txtPlacaDeVideo.setText(computador.getPlacaVideo());
            this.txtFonte.setText(computador.getFonte());
            this.txtDiscoRigido.setText(computador.getDiscoRigido());
            this.txtPreco.setText(computador.getPreco()+"");
            this.btnAtualizar.setText("Confirmar");
            this.controleDeAtualizacao = 1;
            this.btnInserirComputador.setEnabled(false);
            this.btnApagar.setEnabled(false);
        }}else{
            ComputadorDAO dao = new ComputadorDAO ("svc","root");
            Computador computador = new Computador();
            computador.setCod(Integer.parseInt(this.txtCodigo.getText().trim()));
            computador.setProcessador(this.txtProcessador.getText().trim());
            computador.setMemoria(this.txtMemoria.getText().trim());
            computador.setPlacaVideo(this.txtPlacaDeVideo.getText().trim());
            computador.setFonte(this.txtFonte.getText().trim());       
            computador.setDiscoRigido(this.txtDiscoRigido.getText().trim());  
            computador.setPreco(Double.parseDouble(this.txtPreco.getText().trim()));  
            try {
                dao.atualiza(computador);
                this.controleDeAtualizacao = 0;
                this.btnAtualizar.setText("Atualizar");
                this.btnInserirComputador.setEnabled(true);
                this.btnApagar.setEnabled(true);
                limparCampos();
                listarDadosPesquisados();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());            
            }
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void txtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarActionPerformed

    private void txtPesquisarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisarFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarFocusLost

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
       listarDadosPesquisados();
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
          if (this.tabelaComputador.getSelectedRow() == -1){
           JOptionPane.showMessageDialog(null,"Você deve selecionar o computador");
       }else{
           Computador computador = computadores.get(this.tabelaComputador.getSelectedRow());
           int r = JOptionPane.showConfirmDialog(null, "Você deseja realmente apagar o computador? ");
           System.out.println(r);
           if(r == 0){
               ComputadorDAO dao = new ComputadorDAO ("svc","root");
               try {
                   dao.apagar(computador.getCod());
                   JOptionPane.showMessageDialog(null, "Computador deletado com sucesso");
                   listarDadosPesquisados();
               } catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
               }
           }
        }
    }//GEN-LAST:event_btnApagarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
       this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmComputador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnInserirComputador;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaComputador;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDiscoRigido;
    private javax.swing.JTextField txtFonte;
    private javax.swing.JTextField txtMemoria;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtPlacaDeVideo;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtProcessador;
    // End of variables declaration//GEN-END:variables

    private void lerDadosIniciais() {
         ComputadorDAO dao = new ComputadorDAO("svc","root");
        try {
           computadores = dao.listarTodosComputadores();
            MyTableModel tab = new MyTableModel(Computador.class,computadores,tabelaComputador);
            tabelaComputador.setModel(tab);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
        }
    
    }
    
    private void limparCampos() {
        ComputadorDAO dao = new ComputadorDAO("svc","root");
        this.txtProcessador.setText("");
        this.txtMemoria.setText("");
        this.txtPlacaDeVideo.setText("");
        this.txtFonte.setText("");
        this.txtDiscoRigido.setText("");
        this.txtPreco.setText("");
        try {
            this.txtCodigo.setText(dao.GetNextId("computador", "cod")+"");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
        }

   }
    
       private void listarDadosPesquisados() {
       ComputadorDAO dao = new   ComputadorDAO("svc","root");
       String nome = this.txtPesquisar.getText().trim();
        try {
            computadores = dao.listarTodosComputadoresNome(nome);
            MyTableModel tab = new MyTableModel(Computador.class,computadores,tabelaComputador);
            tabelaComputador.setModel(tab);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
        }
    }
}

