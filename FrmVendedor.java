
package Formularios;



import Classes.Vendedor;
import DAO.VendedorDAO;
import classesBase.MyTableModel;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author johnm
 */
public class FrmVendedor extends javax.swing.JFrame {

    private List<Vendedor> vendedores;
    private int controleDeAtualizacao;
  
    
    public FrmVendedor() {
        initComponents();
        iniciaCodigo();
        lerDadosIniciais();
        this.controleDeAtualizacao = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        btnInserir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaVendedor = new javax.swing.JTable();
        btnAtualiza = new javax.swing.JButton();
        btnApaga = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("CÃ³digo");

        txtCodigo.setEditable(false);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Nome");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Pesquisa");

        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyReleased(evt);
            }
        });

        btnInserir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularios/364032-imagens/imagens/success.png"))); // NOI18N
        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        tabelaVendedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaVendedor);

        btnAtualiza.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAtualiza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularios/364032-imagens/imagens/editar.png"))); // NOI18N
        btnAtualiza.setText("Atualiza");
        btnAtualiza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizaActionPerformed(evt);
            }
        });

        btnApaga.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnApaga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularios/364032-imagens/imagens/eraser.png"))); // NOI18N
        btnApaga.setText("Apaga");
        btnApaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagaActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularios/364032-imagens/imagens/sair.png"))); // NOI18N
        btnSair.setText("Sair");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnInserir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtualiza)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnApaga)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSair)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserir)
                    .addComponent(btnAtualiza)
                    .addComponent(btnApaga)
                    .addComponent(btnSair))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        if(this.txtNome.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Erro- Campo em branco!");
        }
        
        else{
        Vendedor vendedor = new Vendedor();
        vendedor.setNome(this.txtNome.getText().trim());
        VendedorDAO dao = new VendedorDAO("svc","root");
            try {
                dao.insere(vendedor);
                JOptionPane.showMessageDialog(this, "Inserido com Sucesso!");
                this.txtNome.setText("");
                this.txtCodigo.setText(dao.GetNextId("vendedor", "cod")+"");
                 
            } catch (SQLException ex) {
                Logger.getLogger(FrmVendedor.class.getName()).log(Level.SEVERE, null, ex);
            }
           }
        
    }//GEN-LAST:event_btnInserirActionPerformed

    private void txtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyReleased
           VendedorDAO dao = new VendedorDAO("svc","root");
       String nome = this.txtPesquisa.getText().trim();
        try {
            List<Vendedor> vendedor = dao.listarTodosVendedoresNome(nome);
            MyTableModel tab = new MyTableModel(Vendedor.class,vendedor,tabelaVendedor);   
            tabelaVendedor.setModel(tab);
        } catch (SQLException ex) {
            Logger.getLogger(FrmVendedor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtPesquisaKeyReleased

    private void btnApagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagaActionPerformed
      if(this.tabelaVendedor.getSelectedRow() == -1){
           JOptionPane.showMessageDialog(null,"VocÃª deve selecionar o vendedor"); 
        }else{
            Vendedor vendedor = vendedores.get(this.tabelaVendedor.getSelectedRow());
            int r = JOptionPane.showConfirmDialog(null, "VocÃª deseja realmente apagar o vendedor "+vendedor.getNome());
            System.out.println(r);
            VendedorDAO dao = new VendedorDAO("svc","root");
            try {
                dao.deleta(vendedor.getCod());
                JOptionPane.showMessageDialog(null, "Vendedor deletado com sucesso");
                listarDadosPesquisados();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnApagaActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnAtualizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizaActionPerformed
          if(this.controleDeAtualizacao == 0){
            if(this.tabelaVendedor.getSelectedRow() == -1){
                JOptionPane.showMessageDialog(null, "VocÃª deve selecionar o vendedor");
            }else{
                Vendedor vendedor = vendedores.get(this.tabelaVendedor.getSelectedRow());
                this.txtCodigo.setText(vendedor.getCod()+"");
                this.txtNome.setText(vendedor.getNome());
                this.btnAtualiza.setText("Confirmar");
                this.controleDeAtualizacao = 1;
                this.btnInserir.setEnabled(false);
                this.btnApaga.setEnabled(false);
            }}else{
            VendedorDAO dao = new VendedorDAO("svc","root");
            Vendedor vendedor = new Vendedor();
            vendedor.setCod(Integer.parseInt(this.txtCodigo.getText().trim()));
            vendedor.setNome(this.txtNome.getText().trim());
            try {
                dao.muda(vendedor);
                this.controleDeAtualizacao = 0;
                this.btnAtualiza.setText("Atualizar");
                this.btnInserir.setEnabled(true);
                this.btnApaga.setEnabled(true);
                limparCampos();
                listarDadosPesquisados();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
            }
        }     
    }//GEN-LAST:event_btnAtualizaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmVendedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApaga;
    private javax.swing.JButton btnAtualiza;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tabelaVendedor;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables
        private void lerDadosIniciais() {
         VendedorDAO dao = new VendedorDAO("svc","root");
        try {
            vendedores = dao.listarTodosVendedores();
            MyTableModel tab = new MyTableModel (Vendedor.class,vendedores, tabelaVendedor);
            tabelaVendedor.setModel(tab);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());;
        }
    }
        
         private void iniciaCodigo() {
        VendedorDAO dao = new VendedorDAO("svc","root");
        try {
            this.txtCodigo.setText( dao.GetNextId("vendedor", "cod")+"");
        } catch (SQLException ex) {
            Logger.getLogger(FrmVendedor.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
     private void listarDadosPesquisados() {
        VendedorDAO dao = new VendedorDAO("svc","root");
        String nome = this.txtPesquisa.getText().trim();
        try {
            vendedores = dao.listarTodosVendedoresNome(nome);
            MyTableModel tab = new MyTableModel(Vendedor.class,vendedores,tabelaVendedor);
            tabelaVendedor.setModel(tab);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());;
        }
        
    }

     private void limparCampos() {
        VendedorDAO dao = new VendedorDAO("svc","root");
        this.txtNome.setText("");
    try {
        this.txtCodigo.setText(dao.GetNextId("vendedor", "cod")+"");
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null,"Erro :"+ex.getMessage());
    }
        
        
    }
}
